import { Component, OnInit, OnDestroy } from '@angular/core';
import { Router } from '@angular/router';
import { Login } from './login';
import { LoginService } from "./login.service";
import { RegisterService } from '../register/register.service'



@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})

export class LoginComponent implements OnInit {

  flag: boolean = false;
  // flag2: boolean = false;
  login = new Login("", "", "");
  message: any;
  status: boolean;
  loginBoolean: any = false;
  isLoggedin = false;
  forgotPswd = false;


  constructor(private router: Router, private loginService: LoginService, private registerServie: RegisterService) {
    this.router.routeReuseStrategy.shouldReuseRoute = function () {
      this.loginBoolean = false
      return false;
    };
  }
  ngOnInit() {
    this.loginBoolean = this.registerServie.fetchLoginValue()
    this.registerServie.changeValue();
  }


  async validateSubmit() {
    this.loginService.fetchDetails({ userId: this.login.userId, password: this.login.password }).subscribe(data => {
      if (data == true) {
        this.flag = true;
        this.isLoggedin = true;
        sessionStorage.setItem('userId', this.login.userId)
        this.loginService.sendUserData(this.login.userId, this.login.password);
        this.loginService.sendLoginValue(this.isLoggedin)
        this.router.navigate(['/home']);
      }
    }, error => {
      this.flag = false;
      this.message = "Error occurred, please try later"
      this.message = error.error.message
    })
  }


  async validateForgotPassword() {
    this.loginService.forgotPassword(this.login).subscribe(data => {
      if (data == true) {
        this.flag = true;
        this.isLoggedin = true;
        sessionStorage.setItem('userId', this.login.userId)
        this.loginService.sendLoginValue(this.isLoggedin)
        this.router.navigate(['/home']);
      }
      else {
        this.flag = false;
        this.message = "Invalid Credentials"
      }
    }, error => {
      this.flag = false;
      this.message = "Error occurred, please try later"
      this.message = error.error.message
    })
  }




  forgotPassword() {
    this.forgotPswd = true;

  }

}